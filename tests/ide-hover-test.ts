import * as swissak from '../';

// Each item is a supplied access point given in the docs.
// When hovered over in VSCode, every line should show a tooltip with the type of the expression.

swissak.MILLISECOND;
swissak.times.MILLISECOND;
swissak.SECOND;
swissak.times.SECOND;
swissak.MINUTE;
swissak.times.MINUTE;
swissak.HOUR;
swissak.times.HOUR;
swissak.DAY;
swissak.times.DAY;
swissak.WEEK;
swissak.times.WEEK;
swissak.MONTH;
swissak.times.MONTH;
swissak.YEAR;
swissak.times.YEAR;
swissak.DECADE;
swissak.times.DECADE;
swissak.CENTURY;
swissak.times.CENTURY;
swissak.MILLENNIUM;
swissak.times.MILLENNIUM;
swissak.milliseconds;
swissak.times.milliseconds;
swissak.seconds;
swissak.times.seconds;
swissak.minutes;
swissak.times.minutes;
swissak.hours;
swissak.times.hours;
swissak.days;
swissak.times.days;
swissak.weeks;
swissak.times.weeks;
swissak.months;
swissak.times.months;
swissak.years;
swissak.times.years;
swissak.decades;
swissak.times.decades;
swissak.centuries;
swissak.times.centuries;
swissak.millenniums;
swissak.times.millenniums;

type TimeType1 = swissak.ms;
type TimeType1b = swissak.times.ms;
type TimeType2 = swissak.second;
type TimeType2b = swissak.times.second;
type TimeType3 = swissak.minute;
type TimeType3b = swissak.times.minute;
type TimeType4 = swissak.hour;
type TimeType4b = swissak.times.hour;
type TimeType5 = swissak.day;
type TimeType5b = swissak.times.day;
type TimeType6 = swissak.week;
type TimeType6b = swissak.times.week;
type TimeType7 = swissak.month;
type TimeType7b = swissak.times.month;
type TimeType8 = swissak.year;
type TimeType8b = swissak.times.year;
type TimeType9 = swissak.decade;
type TimeType9b = swissak.times.decade;
type TimeType10 = swissak.century;
type TimeType10b = swissak.times.century;
type TimeType11 = swissak.millennium;
type TimeType11b = swissak.times.millennium;

swissak.wait;
swissak.waiters.wait;
swissak.waitUntil;
swissak.waiters.waitUntil;
swissak.waitFor;
swissak.waiters.waitFor;
swissak.waitEvery;
swissak.waiters.waitEvery;
swissak.stopInterval;
swissak.waiters.stopInterval;
swissak.interval;
swissak.waiters.interval;
swissak.fn.noop;
swissak.fn.noact;
swissak.fn.result;
swissak.fn.resolve;
swissak.fn.reject;
swissak.fn.exists;
swissak.fn.filters.exists;
swissak.filters.exists;
swissak.fn.isTruthy;
swissak.fn.filters.isTruthy;
swissak.filters.isTruthy;
swissak.fn.isFalsy;
swissak.fn.filters.isFalsy;
swissak.filters.isFalsy;
swissak.fn.isEmpty;
swissak.fn.filters.isEmpty;
swissak.filters.isEmpty;
swissak.fn.isNotEmpty;
swissak.fn.filters.isNotEmpty;
swissak.filters.isNotEmpty;
swissak.fn.isEqual;
swissak.fn.filters.isEqual;
swissak.filters.isEqual;
swissak.fn.isNotEqual;
swissak.fn.filters.isNotEqual;
swissak.filters.isNotEqual;
swissak.fn.dedupe;
swissak.fn.filters.dedupe;
swissak.filters.dedupe;
swissak.fn.dedupeMapped;
swissak.fn.filters.dedupeMapped;
swissak.filters.dedupeMapped;
swissak.fn.toString;
swissak.fn.maps.toString;
swissak.maps.toString;
swissak.fn.toNumber;
swissak.fn.maps.toNumber;
swissak.maps.toNumber;
swissak.fn.toBool;
swissak.fn.maps.toBool;
swissak.maps.toBool;
swissak.fn.toProp;
swissak.fn.maps.toProp;
swissak.maps.toProp;
swissak.fn.toFixed;
swissak.fn.maps.toFixed;
swissak.maps.toFixed;
swissak.fn.asc;
swissak.fn.sorts.asc;
swissak.sorts.asc;
swissak.fn.desc;
swissak.fn.sorts.desc;
swissak.sorts.desc;
swissak.fn.byProp;
swissak.fn.sorts.byProp;
swissak.sorts.byProp;
swissak.fn.nearestTo;
swissak.fn.sorts.nearestTo;
swissak.sorts.nearestTo;
swissak.fn.furthestFrom;
swissak.fn.sorts.furthestFrom;
swissak.sorts.furthestFrom;
swissak.fn.array;
swissak.fn.sorts.array;
swissak.sorts.array;
swissak.fn.arrayAsc;
swissak.fn.sorts.arrayAsc;
swissak.sorts.arrayAsc;
swissak.fn.arrayDesc;
swissak.fn.sorts.arrayDesc;
swissak.sorts.arrayDesc;
swissak.fn.combine;
swissak.fn.reduces.combine;
swissak.reduces.combine;
swissak.fn.combineProp;
swissak.fn.reduces.combineProp;
swissak.reduces.combineProp;
swissak.fn.mode;
swissak.fn.reduces.mode;
swissak.reduces.mode;
swissak.fn.modeMapped;
swissak.fn.reduces.modeMapped;
swissak.reduces.modeMapped;
swissak.fn.isAllEqual;
swissak.fn.everys.isAllEqual;
swissak.everys.isAllEqual;
swissak.fn.isUnique;
swissak.fn.everys.isUnique;
swissak.everys.isUnique;
swissak.fn.bySize;
swissak.fn.groups.bySize;
swissak.groups.bySize;
swissak.fn.byNumGroups;
swissak.fn.groups.byNumGroups;
swissak.groups.byNumGroups;

swissak.range;
swissak.ArrayTools.range;
swissak.zip;
swissak.ArrayTools.zip;
swissak.zipMax;
swissak.ArrayTools.zipMax;
swissak.sortByMapped;
swissak.ArrayTools.sortByMapped;
swissak.randomise;
swissak.ArrayTools.randomise;
swissak.reverse;
swissak.ArrayTools.reverse;
swissak.entries;
swissak.ArrayTools.entries;
swissak.repeat;
swissak.ArrayTools.repeat;
swissak.roll;
swissak.ArrayTools.roll;
swissak.sortNumberedText;
swissak.ArrayTools.sortNumberedText;
swissak.partition;
swissak.ArrayTools.partition;
swissak.groupObj;
swissak.ArrayTools.groupObj;
swissak.group;
swissak.ArrayTools.group;
swissak.ArrayTools.utils.isNumString;
swissak.ArrayTools.utils.partitionNums;
swissak.ObjectTools.remodel;
swissak.ObjectTools.remodelEach;
swissak.ObjectTools.map;
swissak.ObjectTools.mapValues;
swissak.ObjectTools.mapKeys;
swissak.ObjectTools.filter;
swissak.ObjectTools.clean;
swissak.StringTools.capitalise;
swissak.StringTools.angloise;
swissak.StringTools.clean;
swissak.StringTools.repeat;
swissak.StringTools.makeRegExpSafe;
swissak.StringTools.replaceAll;
swissak.StringTools.fromSlugCase;
swissak.StringTools.fromSnakeCase;
swissak.StringTools.fromSpaced;
swissak.StringTools.fromCamelCase;
swissak.StringTools.toLowerCamelCase;
swissak.StringTools.fromSlugCase.toLowerCamelCase;
swissak.StringTools.fromSnakeCase.toLowerCamelCase;
swissak.StringTools.fromSpaced.toLowerCamelCase;
swissak.StringTools.fromCamelCase.toLowerCamelCase;
swissak.StringTools.toUpperCamelCase;
swissak.StringTools.fromSlugCase.toUpperCamelCase;
swissak.StringTools.fromSnakeCase.toUpperCamelCase;
swissak.StringTools.fromSpaced.toUpperCamelCase;
swissak.StringTools.fromCamelCase.toUpperCamelCase;
swissak.StringTools.toCamelCase;
swissak.StringTools.fromSlugCase.toCamelCase;
swissak.StringTools.fromSnakeCase.toCamelCase;
swissak.StringTools.fromSpaced.toCamelCase;
swissak.StringTools.fromCamelCase.toCamelCase;
swissak.StringTools.toLowerSlugCase;
swissak.StringTools.fromSlugCase.toLowerSlugCase;
swissak.StringTools.fromSnakeCase.toLowerSlugCase;
swissak.StringTools.fromSpaced.toLowerSlugCase;
swissak.StringTools.fromCamelCase.toLowerSlugCase;
swissak.StringTools.toUpperSlugCase;
swissak.StringTools.fromSlugCase.toUpperSlugCase;
swissak.StringTools.fromSnakeCase.toUpperSlugCase;
swissak.StringTools.fromSpaced.toUpperSlugCase;
swissak.StringTools.fromCamelCase.toUpperSlugCase;
swissak.StringTools.toSlugCase;
swissak.StringTools.fromSlugCase.toSlugCase;
swissak.StringTools.fromSnakeCase.toSlugCase;
swissak.StringTools.fromSpaced.toSlugCase;
swissak.StringTools.fromCamelCase.toSlugCase;
swissak.StringTools.toLowerSnakeCase;
swissak.StringTools.fromSlugCase.toLowerSnakeCase;
swissak.StringTools.fromSnakeCase.toLowerSnakeCase;
swissak.StringTools.fromSpaced.toLowerSnakeCase;
swissak.StringTools.fromCamelCase.toLowerSnakeCase;
swissak.StringTools.toUpperSnakeCase;
swissak.StringTools.fromSlugCase.toUpperSnakeCase;
swissak.StringTools.fromSnakeCase.toUpperSnakeCase;
swissak.StringTools.fromSpaced.toUpperSnakeCase;
swissak.StringTools.fromCamelCase.toUpperSnakeCase;
swissak.StringTools.toSnakeCase;
swissak.StringTools.fromSlugCase.toSnakeCase;
swissak.StringTools.fromSnakeCase.toSnakeCase;
swissak.StringTools.fromSpaced.toSnakeCase;
swissak.StringTools.fromCamelCase.toSnakeCase;
swissak.StringTools.toLowerSpaced;
swissak.StringTools.fromSlugCase.toLowerSpaced;
swissak.StringTools.fromSnakeCase.toLowerSpaced;
swissak.StringTools.fromSpaced.toLowerSpaced;
swissak.StringTools.fromCamelCase.toLowerSpaced;
swissak.StringTools.toUpperSpaced;
swissak.StringTools.fromSlugCase.toUpperSpaced;
swissak.StringTools.fromSnakeCase.toUpperSpaced;
swissak.StringTools.fromSpaced.toUpperSpaced;
swissak.StringTools.fromCamelCase.toUpperSpaced;
swissak.StringTools.toCapitalisedSpaced;
swissak.StringTools.fromSlugCase.toCapitalisedSpaced;
swissak.StringTools.fromSnakeCase.toCapitalisedSpaced;
swissak.StringTools.fromSpaced.toCapitalisedSpaced;
swissak.StringTools.fromCamelCase.toCapitalisedSpaced;
swissak.StringTools.toSpaced;
swissak.StringTools.fromSlugCase.toSpaced;
swissak.StringTools.fromSnakeCase.toSpaced;
swissak.StringTools.fromSpaced.toSpaced;
swissak.StringTools.fromCamelCase.toSpaced;
swissak.StringTools.toCharacterSeparated;
swissak.StringTools.fromSlugCase.toCharacterSeparated;
swissak.StringTools.fromSnakeCase.toCharacterSeparated;
swissak.StringTools.fromSpaced.toCharacterSeparated;
swissak.StringTools.fromCamelCase.toCharacterSeparated;
swissak.clx;
swissak.StringTools.clx;
swissak.ff;
swissak.MathsTools.ff;
swissak.MathsTools.fixFloat;
swissak.MathsTools.addAll;
swissak.MathsTools.floorTo;
swissak.MathsTools.round.floorTo;
swissak.MathsTools.round.to;
swissak.MathsTools.roundTo;
swissak.MathsTools.round.roundTo;
swissak.MathsTools.ceilTo;
swissak.MathsTools.round.ceilTo;
swissak.MathsTools.lerp;
swissak.MathsTools.lerpArray;
swissak.MathsTools.lerpObj;
swissak.MathsTools.clamp;
swissak.MathsTools.getOrdinal;
swissak.getDeferred;
swissak.PromiseTools.getDeferred;
swissak.all;
swissak.PromiseTools.all;
swissak.allLimit;
swissak.PromiseTools.allLimit;
swissak.each;
swissak.PromiseTools.each;
swissak.eachLimit;
swissak.PromiseTools.eachLimit;
swissak.map;
swissak.PromiseTools.map;
swissak.mapLimit;
swissak.PromiseTools.mapLimit;
swissak.allObj;
swissak.PromiseTools.allObj;
swissak.allLimitObj;
swissak.PromiseTools.allLimitObj;

type ColourType1 = swissak.ColourTools.ColourValues;
type ColourType2 = swissak.ColourTools.HSLValues;

swissak.ColourTools.namedColours;
swissak.ColourTools.parse;
swissak.ColourTools.toHex;
swissak.ColourTools.getLuminance;
swissak.ColourTools.toYUV;
swissak.ColourTools.toHSL;
swissak.ColourTools.fromHSL;
swissak.ColourTools.invertColour;
swissak.ColourTools.getContrastedColour;
swissak.ColourTools.getLimitedColour;
swissak.TimeTools.toReadableDuration;
swissak.tryOr;
swissak.ErrorTools.tryOr;
swissak.retry;
swissak.ErrorTools.retry;
swissak.retryOr;
swissak.ErrorTools.retryOr;

// cachier

swissak.cachier;
swissak.cachier.get;
swissak.cachier.getOrSave;
swissak.cachier.getOrRun;
swissak.cachier.save;
swissak.cachier.remove;
swissak.cachier.clear;
swissak.cachier.getAll;
swissak.cachier.create;

type Cachier1 = swissak.Cachier<number>;

// onDemand

swissak.onDemand;

// symbols

swissak.symbols;

swissak.symbols.TAB;
swissak.symbols.TICK;
swissak.symbols.CROSS;
swissak.symbols.PLUS;
swissak.symbols.MINUS;
swissak.symbols.TIMES;
swissak.symbols.DIVIDE;
swissak.symbols.ELLIPSIS;
swissak.symbols.BULLET;
swissak.symbols.EJECT;
swissak.symbols.TILDE;
swissak.symbols.HOME;
swissak.symbols.RADIO_EMPTY;
swissak.symbols.RADIO_FULL;
swissak.symbols.CURSOR;
swissak.symbols.CHEV_LFT;
swissak.symbols.CHEV_RGT;
swissak.symbols.CHAIN;
swissak.symbols.TRI_UPP;
swissak.symbols.TRI_DWN;
swissak.symbols.TRI_RGT;
swissak.symbols.TRI_LFT;
swissak.symbols.ARROW_UPP;
swissak.symbols.ARROW_DWN;
swissak.symbols.ARROW_RGT;
swissak.symbols.ARROW_LFT;
swissak.symbols.ARROW_UPP_RGT;
swissak.symbols.ARROW_DWN_RGT;
swissak.symbols.ARROW_DWN_LFT;
swissak.symbols.ARROW_UPP_LFT;
swissak.symbols.ARROW_STILL;
swissak.symbols.ARROW_FLIP_H;
swissak.symbols.ARROW_FLIP_V;
swissak.symbols.ARROW_ROTATE_UPP;
swissak.symbols.ARROW_ROTATE_DWN;
swissak.symbols.ARROW_ROTATE_LFT;
swissak.symbols.ARROW_ROTATE_RGT;
swissak.symbols.ARROW_ROTATE_CLOCK;
swissak.symbols.ARROW_ROTATE_ANTI_CLOCK;
swissak.symbols.FRACTION_1_4;
swissak.symbols.FRACTION_1_2;
swissak.symbols.FRACTION_3_4;
swissak.symbols.SUPERSCRIPT['1'];
swissak.symbols.SUPERSCRIPT['2'];
swissak.symbols.SUPERSCRIPT['3'];
swissak.symbols.SUPERSCRIPT['4'];
swissak.symbols.SUPERSCRIPT['5'];
swissak.symbols.SUPERSCRIPT['6'];
swissak.symbols.SUPERSCRIPT['7'];
swissak.symbols.SUPERSCRIPT['8'];
swissak.symbols.SUPERSCRIPT['9'];
swissak.symbols.SUPERSCRIPT['0'];
swissak.symbols.SUPERSCRIPT['-'];
swissak.symbols.SUPERSCRIPT['+'];
swissak.symbols.SUPERSCRIPT['='];
swissak.symbols.SUPERSCRIPT['('];
swissak.symbols.SUPERSCRIPT[')'];
swissak.symbols.SUPERSCRIPT['i'];
swissak.symbols.SUPERSCRIPT['n'];
swissak.symbols.SUPERSCRIPT['o'];
swissak.symbols.SUPERSCRIPT['*'];
swissak.symbols.BLOCK.full;
swissak.symbols.BLOCK.upperHalf;
swissak.symbols.BLOCK.lowerOneEighth;
swissak.symbols.BLOCK.lowerOneQuarter;
swissak.symbols.BLOCK.lowerThreeEighths;
swissak.symbols.BLOCK.lowerHalf;
swissak.symbols.BLOCK.lowerFiveEighths;
swissak.symbols.BLOCK.lowerThreeQuarters;
swissak.symbols.BLOCK.lowerSevenEighths;
swissak.symbols.BLOCK.leftSevenEighths;
swissak.symbols.BLOCK.leftThreeQuarters;
swissak.symbols.BLOCK.leftFiveEighths;
swissak.symbols.BLOCK.leftHalf;
swissak.symbols.BLOCK.leftThreeEighths;
swissak.symbols.BLOCK.leftOneQuarter;
swissak.symbols.BLOCK.leftOneEighth;
swissak.symbols.BLOCK.rightHalf;
swissak.symbols.BLOCK.upperOneEighth;
swissak.symbols.BLOCK.rightOneEighth;
swissak.symbols.SHADE.light;
swissak.symbols.SHADE.medium;
swissak.symbols.SHADE.dark;
swissak.symbols.QUADRANT.upperLeft;
swissak.symbols.QUADRANT.upperRight;
swissak.symbols.QUADRANT.lowerLeft;
swissak.symbols.QUADRANT.lowerRight;
swissak.symbols.QUADRANT.upperLeftLowerLeftLowerRight;
swissak.symbols.QUADRANT.upperLeftLowerRight;
swissak.symbols.QUADRANT.upperLeftUpperRightLowerLeft;
swissak.symbols.QUADRANT.upperLeftUpperRightLowerRight;
swissak.symbols.QUADRANT.upperRightLowerLeft;
swissak.symbols.QUADRANT.upperRightLowerLeftLowerRight;

swissak.superscript;
swissak.QueueManager;
swissak.queue.setDefaultPauseTime;

const queueManager = new swissak.QueueManager();

queueManager.setDefaultPauseTime;
swissak.queue.setPauseTime;
queueManager.setPauseTime;
swissak.queue.add;
queueManager.add;
swissak.queue.new;
queueManager.new;
swissak.queue;
swissak.getTimer;
swissak.timer;

type GeneralType1 = swissak.Partial<string>;
type GeneralType2 = swissak.KeysOnly<{}>;
type GeneralType3 = swissak.Numbered<{}>;
type GeneralType4 = swissak.OfType<{}, string>;
type GeneralType5 = swissak.ObjOfType;

swissak.safe.num;
swissak.safe.str;
swissak.safe.bool;
swissak.safe.func;
swissak.safe.obj;
swissak.safe.arr;
swissak.safe.prop;
swissak.safe.arrOf.num;
swissak.safe.arrOf.str;
swissak.safe.arrOf.bool;
swissak.safe.arrOf.func;
swissak.safe.arrOf.obj;
swissak.safe.arrOf.arr;
swissak.safe.arrOf.prop;
